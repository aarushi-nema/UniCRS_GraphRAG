15:24:25,212 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
15:24:25,217 graphrag.cli.index INFO Starting pipeline run for: 20250221-152425, dry_run=False
15:24:25,218 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
15:24:25,219 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
15:24:25,219 graphrag.index.input.factory INFO loading input from root_dir=input
15:24:25,219 graphrag.index.input.factory INFO using file storage for input
15:24:25,219 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
15:24:25,220 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
15:24:25,222 graphrag.index.input.text INFO Found 1 files, loading 1
15:24:25,223 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
15:24:25,230 graphrag.utils.storage INFO reading table from storage: input.parquet
15:24:26,464 graphrag.utils.storage INFO reading table from storage: input.parquet
15:24:26,469 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:24:26,497 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:24:26,607 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:24:37,222 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:24:37,245 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:24:37,284 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:24:37,289 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:24:37,294 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
15:24:37,320 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:24:37,325 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:24:37,330 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
15:24:37,378 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:24:37,383 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:24:37,388 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:24:37,427 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
15:24:37,432 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:24:37,437 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:24:37,441 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
15:24:37,459 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 9
15:24:37,548 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
15:24:37,554 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:24:37,559 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
15:24:37,563 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:24:37,568 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
15:24:37,580 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
15:24:37,580 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
15:24:37,614 graphrag.index.operations.embed_text.strategies.openai INFO embedding 9 inputs via 9 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:24:37,652 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
15:24:37,655 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:24:37,669 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
15:24:37,673 graphrag.index.operations.embed_text.strategies.openai INFO embedding 2 inputs via 2 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:24:37,721 graphrag.cli.index INFO All workflows completed successfully.
15:24:44,878 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
15:24:44,882 graphrag.cli.index INFO Starting pipeline run for: 20250221-152444, dry_run=False
15:24:44,883 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
15:24:44,884 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
15:24:44,884 graphrag.index.input.factory INFO loading input from root_dir=input
15:24:44,884 graphrag.index.input.factory INFO using file storage for input
15:24:44,885 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
15:24:44,885 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
15:24:44,887 graphrag.index.input.text INFO Found 1 files, loading 1
15:24:44,888 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
15:24:44,894 graphrag.utils.storage INFO reading table from storage: input.parquet
15:24:46,152 graphrag.utils.storage INFO reading table from storage: input.parquet
15:24:46,157 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:24:46,187 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:24:46,295 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:24:57,88 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:24:57,121 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:24:57,156 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:24:57,161 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:24:57,169 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
15:24:57,198 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:24:57,203 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:24:57,208 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
15:24:57,261 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:24:57,265 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:24:57,270 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:24:57,307 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
15:24:57,313 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:24:57,318 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:24:57,323 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
15:24:57,340 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 9
15:24:57,435 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
15:24:57,441 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:24:57,446 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
15:24:57,451 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:24:57,456 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
15:24:57,467 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
15:24:57,468 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
15:24:57,505 graphrag.index.operations.embed_text.strategies.openai INFO embedding 16 inputs via 16 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:24:57,560 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
15:24:57,564 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:24:57,578 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
15:24:57,585 graphrag.index.operations.embed_text.strategies.openai INFO embedding 3 inputs via 3 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:24:57,636 graphrag.cli.index INFO All workflows completed successfully.
15:25:04,827 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
15:25:04,831 graphrag.cli.index INFO Starting pipeline run for: 20250221-152504, dry_run=False
15:25:04,836 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
15:25:04,837 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
15:25:04,837 graphrag.index.input.factory INFO loading input from root_dir=input
15:25:04,837 graphrag.index.input.factory INFO using file storage for input
15:25:04,838 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
15:25:04,838 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
15:25:04,840 graphrag.index.input.text INFO Found 1 files, loading 1
15:25:04,841 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
15:25:04,847 graphrag.utils.storage INFO reading table from storage: input.parquet
15:25:06,111 graphrag.utils.storage INFO reading table from storage: input.parquet
15:25:06,116 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:25:06,142 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:25:06,255 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:25:16,967 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:25:16,992 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:25:17,24 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:25:17,29 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:25:17,34 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
15:25:17,64 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:25:17,69 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:25:17,74 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
15:25:17,120 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:25:17,125 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:25:17,129 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:25:17,167 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
15:25:17,172 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:25:17,178 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:25:17,182 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
15:25:17,200 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 5
15:25:17,284 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
15:25:17,289 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:25:17,294 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
15:25:17,299 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:25:17,303 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
15:25:17,312 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
15:25:17,312 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
15:25:17,343 graphrag.index.operations.embed_text.strategies.openai INFO embedding 11 inputs via 11 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:25:17,382 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
15:25:17,386 graphrag.index.operations.embed_text.strategies.openai INFO embedding 2 inputs via 2 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:25:17,399 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
15:25:17,403 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:25:17,446 graphrag.cli.index INFO All workflows completed successfully.
15:25:24,408 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
15:25:24,413 graphrag.cli.index INFO Starting pipeline run for: 20250221-152524, dry_run=False
15:25:24,414 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
15:25:24,415 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
15:25:24,415 graphrag.index.input.factory INFO loading input from root_dir=input
15:25:24,415 graphrag.index.input.factory INFO using file storage for input
15:25:24,415 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
15:25:24,416 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
15:25:24,418 graphrag.index.input.text INFO Found 1 files, loading 1
15:25:24,419 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
15:25:24,425 graphrag.utils.storage INFO reading table from storage: input.parquet
15:25:25,634 graphrag.utils.storage INFO reading table from storage: input.parquet
15:25:25,638 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:25:25,667 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:25:25,774 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:25:36,448 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:25:36,471 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:25:36,498 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:25:36,503 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:25:36,508 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
15:25:36,538 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:25:36,542 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:25:36,547 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
15:25:36,594 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:25:36,601 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:25:36,606 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:25:36,642 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
15:25:36,647 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:25:36,651 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:25:36,656 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
15:25:36,673 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 3
15:25:36,745 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
15:25:36,750 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:25:36,755 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
15:25:36,760 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:25:36,764 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
15:25:36,773 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
15:25:36,773 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
15:25:36,808 graphrag.index.operations.embed_text.strategies.openai INFO embedding 10 inputs via 10 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:25:36,846 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
15:25:36,849 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:25:36,860 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
15:25:36,866 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:25:36,909 graphrag.cli.index INFO All workflows completed successfully.
15:25:44,52 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
15:25:44,57 graphrag.cli.index INFO Starting pipeline run for: 20250221-152544, dry_run=False
15:25:44,58 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
15:25:44,59 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
15:25:44,59 graphrag.index.input.factory INFO loading input from root_dir=input
15:25:44,59 graphrag.index.input.factory INFO using file storage for input
15:25:44,60 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
15:25:44,60 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
15:25:44,61 graphrag.index.input.text INFO Found 1 files, loading 1
15:25:44,63 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
15:25:44,69 graphrag.utils.storage INFO reading table from storage: input.parquet
15:25:45,335 graphrag.utils.storage INFO reading table from storage: input.parquet
15:25:45,341 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:25:45,367 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:25:45,476 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:25:56,24 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:25:56,52 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:25:56,84 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:25:56,89 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:25:56,93 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
15:25:56,124 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:25:56,129 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:25:56,133 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
15:25:56,183 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:25:56,187 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:25:56,192 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:25:56,228 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
15:25:56,232 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:25:56,237 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:25:56,241 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
15:25:56,257 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 9
15:25:56,351 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
15:25:56,358 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:25:56,365 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
15:25:56,370 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:25:56,375 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
15:25:56,384 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
15:25:56,384 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
15:25:56,422 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:25:56,453 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
15:25:56,456 graphrag.index.operations.embed_text.strategies.openai INFO embedding 10 inputs via 10 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:25:56,485 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
15:25:56,490 graphrag.index.operations.embed_text.strategies.openai INFO embedding 3 inputs via 3 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:25:56,538 graphrag.cli.index INFO All workflows completed successfully.
15:47:58,975 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
15:47:58,980 graphrag.cli.index INFO Starting pipeline run for: 20250221-154758, dry_run=False
15:47:58,981 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
15:47:58,981 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
15:47:58,982 graphrag.index.input.factory INFO loading input from root_dir=input
15:47:58,982 graphrag.index.input.factory INFO using file storage for input
15:47:58,982 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
15:47:58,983 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
15:47:58,984 graphrag.index.input.text INFO Found 1 files, loading 1
15:47:58,985 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
15:47:58,991 graphrag.utils.storage INFO reading table from storage: input.parquet
15:48:00,224 graphrag.utils.storage INFO reading table from storage: input.parquet
15:48:00,229 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:48:00,256 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:48:00,361 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:48:10,970 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:48:10,992 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:48:11,29 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:48:11,36 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:48:11,41 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
15:48:11,67 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:48:11,72 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:48:11,77 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
15:48:11,127 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:48:11,132 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:48:11,137 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:48:11,174 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
15:48:11,179 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:48:11,184 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:48:11,189 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
15:48:11,205 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 9
15:48:11,293 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
15:48:11,298 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:48:11,303 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
15:48:11,308 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:48:11,312 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
15:48:11,321 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
15:48:11,321 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
15:48:11,352 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:48:11,375 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
15:48:11,378 graphrag.index.operations.embed_text.strategies.openai INFO embedding 9 inputs via 9 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:48:11,399 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
15:48:11,403 graphrag.index.operations.embed_text.strategies.openai INFO embedding 2 inputs via 2 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:48:11,449 graphrag.cli.index INFO All workflows completed successfully.
15:48:49,777 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
15:48:49,782 graphrag.cli.index INFO Starting pipeline run for: 20250221-154849, dry_run=False
15:48:49,783 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
15:48:49,784 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
15:48:49,784 graphrag.index.input.factory INFO loading input from root_dir=input
15:48:49,784 graphrag.index.input.factory INFO using file storage for input
15:48:49,785 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
15:48:49,785 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
15:48:49,787 graphrag.index.input.text INFO Found 1 files, loading 1
15:48:49,788 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
15:48:49,794 graphrag.utils.storage INFO reading table from storage: input.parquet
15:48:51,35 graphrag.utils.storage INFO reading table from storage: input.parquet
15:48:51,40 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:48:51,65 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:48:51,174 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:49:01,571 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:49:01,595 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:49:01,635 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:49:01,640 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:49:01,645 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
15:49:01,671 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:49:01,676 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:49:01,680 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
15:49:01,728 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:49:01,733 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:49:01,738 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:49:01,773 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
15:49:01,781 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:49:01,787 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:49:01,792 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
15:49:01,809 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 9
15:49:01,894 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
15:49:01,899 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:49:01,904 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
15:49:01,908 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:49:01,913 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
15:49:01,921 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
15:49:01,921 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
15:49:01,952 graphrag.index.operations.embed_text.strategies.openai INFO embedding 2 inputs via 2 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:49:01,981 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
15:49:01,988 graphrag.index.operations.embed_text.strategies.openai INFO embedding 9 inputs via 9 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:49:02,11 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
15:49:02,16 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:49:02,57 graphrag.cli.index INFO All workflows completed successfully.
15:49:09,19 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
15:49:09,23 graphrag.cli.index INFO Starting pipeline run for: 20250221-154909, dry_run=False
15:49:09,24 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
15:49:09,25 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
15:49:09,25 graphrag.index.input.factory INFO loading input from root_dir=input
15:49:09,25 graphrag.index.input.factory INFO using file storage for input
15:49:09,26 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
15:49:09,26 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
15:49:09,28 graphrag.index.input.text INFO Found 1 files, loading 1
15:49:09,29 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
15:49:09,38 graphrag.utils.storage INFO reading table from storage: input.parquet
15:49:10,268 graphrag.utils.storage INFO reading table from storage: input.parquet
15:49:10,272 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:49:10,298 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:49:10,409 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:49:20,914 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:49:20,941 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:49:20,975 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:49:20,980 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:49:20,984 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
15:49:21,15 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:49:21,20 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:49:21,24 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
15:49:21,72 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:49:21,77 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:49:21,81 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:49:21,117 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
15:49:21,122 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:49:21,126 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:49:21,131 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
15:49:21,148 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 9
15:49:21,242 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
15:49:21,248 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:49:21,252 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
15:49:21,257 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:49:21,261 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
15:49:21,270 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
15:49:21,270 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
15:49:21,303 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:49:21,333 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
15:49:21,341 graphrag.index.operations.embed_text.strategies.openai INFO embedding 16 inputs via 16 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:49:21,375 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
15:49:21,379 graphrag.index.operations.embed_text.strategies.openai INFO embedding 3 inputs via 3 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:49:21,433 graphrag.cli.index INFO All workflows completed successfully.
15:49:28,462 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
15:49:28,467 graphrag.cli.index INFO Starting pipeline run for: 20250221-154928, dry_run=False
15:49:28,468 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
15:49:28,469 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
15:49:28,469 graphrag.index.input.factory INFO loading input from root_dir=input
15:49:28,469 graphrag.index.input.factory INFO using file storage for input
15:49:28,470 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
15:49:28,470 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
15:49:28,472 graphrag.index.input.text INFO Found 1 files, loading 1
15:49:28,473 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
15:49:28,483 graphrag.utils.storage INFO reading table from storage: input.parquet
15:49:29,708 graphrag.utils.storage INFO reading table from storage: input.parquet
15:49:29,713 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:49:29,739 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:49:29,847 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:49:40,273 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:49:40,296 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:49:40,326 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:49:40,331 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:49:40,335 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
15:49:40,362 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:49:40,368 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:49:40,372 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
15:49:40,420 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:49:40,424 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:49:40,429 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:49:40,466 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
15:49:40,471 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:49:40,475 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:49:40,480 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
15:49:40,499 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 5
15:49:40,586 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
15:49:40,591 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:49:40,596 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
15:49:40,601 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:49:40,605 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
15:49:40,616 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
15:49:40,617 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
15:49:40,646 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:49:40,672 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
15:49:40,676 graphrag.index.operations.embed_text.strategies.openai INFO embedding 2 inputs via 2 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:49:40,691 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
15:49:40,695 graphrag.index.operations.embed_text.strategies.openai INFO embedding 11 inputs via 11 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:49:40,753 graphrag.cli.index INFO All workflows completed successfully.
15:49:47,876 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
15:49:47,881 graphrag.cli.index INFO Starting pipeline run for: 20250221-154947, dry_run=False
15:49:47,882 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
15:49:47,883 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
15:49:47,883 graphrag.index.input.factory INFO loading input from root_dir=input
15:49:47,883 graphrag.index.input.factory INFO using file storage for input
15:49:47,884 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
15:49:47,884 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
15:49:47,886 graphrag.index.input.text INFO Found 1 files, loading 1
15:49:47,887 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
15:49:47,893 graphrag.utils.storage INFO reading table from storage: input.parquet
15:49:49,176 graphrag.utils.storage INFO reading table from storage: input.parquet
15:49:49,184 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:49:49,210 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:49:49,322 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:49:59,943 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:49:59,968 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:49:59,999 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:50:00,6 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:50:00,11 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
15:50:00,46 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:50:00,51 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:50:00,56 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
15:50:00,101 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:50:00,106 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:50:00,111 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:50:00,151 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
15:50:00,159 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:50:00,164 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:50:00,168 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
15:50:00,184 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 3
15:50:00,262 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
15:50:00,267 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:50:00,271 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
15:50:00,277 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:50:00,281 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
15:50:00,292 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
15:50:00,292 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
15:50:00,319 graphrag.index.operations.embed_text.strategies.openai INFO embedding 10 inputs via 10 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:50:00,366 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
15:50:00,374 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:50:00,390 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
15:50:00,393 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:50:00,438 graphrag.cli.index INFO All workflows completed successfully.
15:50:07,511 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
15:50:07,516 graphrag.cli.index INFO Starting pipeline run for: 20250221-155007, dry_run=False
15:50:07,517 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
15:50:07,517 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
15:50:07,518 graphrag.index.input.factory INFO loading input from root_dir=input
15:50:07,518 graphrag.index.input.factory INFO using file storage for input
15:50:07,518 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
15:50:07,519 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
15:50:07,520 graphrag.index.input.text INFO Found 1 files, loading 1
15:50:07,522 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
15:50:07,528 graphrag.utils.storage INFO reading table from storage: input.parquet
15:50:08,758 graphrag.utils.storage INFO reading table from storage: input.parquet
15:50:08,763 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:50:08,789 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:50:08,893 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:50:19,602 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:50:19,626 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:50:19,661 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:50:19,667 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:50:19,671 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
15:50:19,709 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
15:50:19,714 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
15:50:19,725 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
15:50:19,778 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
15:50:19,784 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:50:19,789 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:50:19,829 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
15:50:19,835 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:50:19,839 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:50:19,844 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
15:50:19,860 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 9
15:50:19,954 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
15:50:19,960 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
15:50:19,965 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
15:50:19,970 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
15:50:19,974 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
15:50:19,984 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
15:50:19,984 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
15:50:20,17 graphrag.index.operations.embed_text.strategies.openai INFO embedding 10 inputs via 10 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:50:20,58 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
15:50:20,61 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:50:20,73 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
15:50:20,79 graphrag.index.operations.embed_text.strategies.openai INFO embedding 3 inputs via 3 snippets using 1 batches. max_batch_size=16, max_tokens=8191
15:50:20,125 graphrag.cli.index INFO All workflows completed successfully.
16:06:49,844 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
16:06:49,848 graphrag.cli.index INFO Starting pipeline run for: 20250221-160649, dry_run=False
16:06:49,849 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
16:06:49,849 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
16:06:49,850 graphrag.index.input.factory INFO loading input from root_dir=input
16:06:49,850 graphrag.index.input.factory INFO using file storage for input
16:06:49,850 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
16:06:49,851 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
16:06:49,855 graphrag.index.input.text INFO Found 1 files, loading 1
16:06:49,856 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
16:06:49,863 graphrag.utils.storage INFO reading table from storage: input.parquet
16:06:51,74 graphrag.utils.storage INFO reading table from storage: input.parquet
16:06:51,78 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
16:06:51,104 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
16:06:51,206 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
16:07:01,625 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
16:07:01,647 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
16:07:01,686 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
16:07:01,691 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
16:07:01,695 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
16:07:01,720 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
16:07:01,725 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
16:07:01,730 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
16:07:01,778 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
16:07:01,782 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
16:07:01,786 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
16:07:01,823 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
16:07:01,828 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
16:07:01,832 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
16:07:01,836 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
16:07:01,854 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 9
16:07:01,940 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
16:07:01,944 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
16:07:01,949 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
16:07:01,953 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
16:07:01,957 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
16:07:01,965 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
16:07:01,966 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
16:07:02,7 graphrag.index.operations.embed_text.strategies.openai INFO embedding 9 inputs via 9 snippets using 1 batches. max_batch_size=16, max_tokens=8191
16:07:02,44 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
16:07:02,47 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
16:07:02,64 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
16:07:02,67 graphrag.index.operations.embed_text.strategies.openai INFO embedding 2 inputs via 2 snippets using 1 batches. max_batch_size=16, max_tokens=8191
16:07:02,117 graphrag.cli.index INFO All workflows completed successfully.
16:20:05,569 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
16:20:05,573 graphrag.cli.index INFO Starting pipeline run for: 20250221-162005, dry_run=False
16:20:05,574 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
16:20:05,574 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
16:20:05,575 graphrag.index.input.factory INFO loading input from root_dir=input
16:20:05,575 graphrag.index.input.factory INFO using file storage for input
16:20:05,575 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
16:20:05,576 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
16:20:05,577 graphrag.index.input.text INFO Found 1 files, loading 1
16:20:05,578 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
16:20:05,585 graphrag.utils.storage INFO reading table from storage: input.parquet
16:20:06,807 graphrag.utils.storage INFO reading table from storage: input.parquet
16:20:06,812 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
16:20:06,838 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
16:20:06,943 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
16:20:17,425 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
16:20:17,449 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
16:20:17,487 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
16:20:17,493 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
16:20:17,497 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
16:20:17,525 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
16:20:17,530 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
16:20:17,534 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
16:20:17,579 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
16:20:17,586 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
16:20:17,591 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
16:20:17,627 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
16:20:17,632 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
16:20:17,636 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
16:20:17,640 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
16:20:17,655 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 9
16:20:17,745 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
16:20:17,750 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
16:20:17,755 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
16:20:17,759 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
16:20:17,764 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
16:20:17,773 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
16:20:17,773 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
16:20:17,808 graphrag.index.operations.embed_text.strategies.openai INFO embedding 9 inputs via 9 snippets using 1 batches. max_batch_size=16, max_tokens=8191
16:20:17,844 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
16:20:17,848 graphrag.index.operations.embed_text.strategies.openai INFO embedding 2 inputs via 2 snippets using 1 batches. max_batch_size=16, max_tokens=8191
16:20:17,866 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
16:20:17,873 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
16:20:17,924 graphrag.cli.index INFO All workflows completed successfully.
16:20:25,89 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
16:20:25,92 graphrag.cli.index INFO Starting pipeline run for: 20250221-162025, dry_run=False
16:20:25,93 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
16:20:25,94 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
16:20:25,94 graphrag.index.input.factory INFO loading input from root_dir=input
16:20:25,95 graphrag.index.input.factory INFO using file storage for input
16:20:25,95 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
16:20:25,95 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
16:20:25,97 graphrag.index.input.text INFO Found 1 files, loading 1
16:20:25,98 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
16:20:25,104 graphrag.utils.storage INFO reading table from storage: input.parquet
16:20:26,326 graphrag.utils.storage INFO reading table from storage: input.parquet
16:20:26,333 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
16:20:26,359 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
16:20:26,463 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
16:20:36,921 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
16:20:36,951 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
16:20:36,983 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
16:20:36,988 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
16:20:36,992 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
16:20:37,21 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
16:20:37,26 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
16:20:37,31 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
16:20:37,79 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
16:20:37,84 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
16:20:37,88 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
16:20:37,129 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
16:20:37,135 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
16:20:37,139 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
16:20:37,143 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
16:20:37,158 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 9
16:20:37,258 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
16:20:37,264 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
16:20:37,269 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
16:20:37,273 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
16:20:37,277 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
16:20:37,286 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
16:20:37,286 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
16:20:37,320 graphrag.index.operations.embed_text.strategies.openai INFO embedding 16 inputs via 16 snippets using 1 batches. max_batch_size=16, max_tokens=8191
16:20:37,372 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
16:20:37,376 graphrag.index.operations.embed_text.strategies.openai INFO embedding 3 inputs via 3 snippets using 1 batches. max_batch_size=16, max_tokens=8191
16:20:37,393 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
16:20:37,397 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
16:20:37,442 graphrag.cli.index INFO All workflows completed successfully.
16:20:44,669 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
16:20:44,672 graphrag.cli.index INFO Starting pipeline run for: 20250221-162044, dry_run=False
16:20:44,673 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
16:20:44,674 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
16:20:44,674 graphrag.index.input.factory INFO loading input from root_dir=input
16:20:44,674 graphrag.index.input.factory INFO using file storage for input
16:20:44,675 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
16:20:44,675 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
16:20:44,680 graphrag.index.input.text INFO Found 1 files, loading 1
16:20:44,681 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
16:20:44,688 graphrag.utils.storage INFO reading table from storage: input.parquet
16:20:45,922 graphrag.utils.storage INFO reading table from storage: input.parquet
16:20:45,926 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
16:20:45,952 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
16:20:46,56 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
16:20:56,622 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
16:20:56,647 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
16:20:56,679 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
16:20:56,685 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
16:20:56,690 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
16:20:56,719 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
16:20:56,727 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
16:20:56,733 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
16:20:56,781 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
16:20:56,786 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
16:20:56,793 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
16:20:56,833 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
16:20:56,839 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
16:20:56,844 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
16:20:56,848 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
16:20:56,865 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 5
16:20:56,950 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
16:20:56,956 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
16:20:56,961 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
16:20:56,967 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
16:20:56,972 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
16:20:56,982 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
16:20:56,982 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
16:20:57,16 graphrag.index.operations.embed_text.strategies.openai INFO embedding 2 inputs via 2 snippets using 1 batches. max_batch_size=16, max_tokens=8191
16:20:57,38 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
16:20:57,43 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
16:20:57,60 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
16:20:57,66 graphrag.index.operations.embed_text.strategies.openai INFO embedding 11 inputs via 11 snippets using 1 batches. max_batch_size=16, max_tokens=8191
16:20:57,124 graphrag.cli.index INFO All workflows completed successfully.
16:21:04,281 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
16:21:04,285 graphrag.cli.index INFO Starting pipeline run for: 20250221-162104, dry_run=False
16:21:04,286 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
16:21:04,286 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
16:21:04,287 graphrag.index.input.factory INFO loading input from root_dir=input
16:21:04,287 graphrag.index.input.factory INFO using file storage for input
16:21:04,287 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
16:21:04,288 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
16:21:04,290 graphrag.index.input.text INFO Found 1 files, loading 1
16:21:04,291 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
16:21:04,297 graphrag.utils.storage INFO reading table from storage: input.parquet
16:21:05,515 graphrag.utils.storage INFO reading table from storage: input.parquet
16:21:05,519 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
16:21:05,545 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
16:21:05,651 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
16:21:16,13 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
16:21:16,38 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
16:21:16,64 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
16:21:16,69 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
16:21:16,73 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
16:21:16,101 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
16:21:16,106 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
16:21:16,110 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
16:21:16,157 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
16:21:16,161 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
16:21:16,166 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
16:21:16,200 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
16:21:16,206 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
16:21:16,211 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
16:21:16,218 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
16:21:16,234 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 3
16:21:16,306 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
16:21:16,311 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
16:21:16,315 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
16:21:16,321 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
16:21:16,325 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
16:21:16,333 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
16:21:16,334 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
16:21:16,363 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
16:21:16,387 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
16:21:16,392 graphrag.index.operations.embed_text.strategies.openai INFO embedding 10 inputs via 10 snippets using 1 batches. max_batch_size=16, max_tokens=8191
16:21:16,418 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
16:21:16,421 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
16:21:16,464 graphrag.cli.index INFO All workflows completed successfully.
16:21:23,546 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
16:21:23,549 graphrag.cli.index INFO Starting pipeline run for: 20250221-162123, dry_run=False
16:21:23,550 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
16:21:23,551 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
16:21:23,551 graphrag.index.input.factory INFO loading input from root_dir=input
16:21:23,552 graphrag.index.input.factory INFO using file storage for input
16:21:23,552 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
16:21:23,552 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
16:21:23,554 graphrag.index.input.text INFO Found 1 files, loading 1
16:21:23,555 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
16:21:23,561 graphrag.utils.storage INFO reading table from storage: input.parquet
16:21:24,779 graphrag.utils.storage INFO reading table from storage: input.parquet
16:21:24,785 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
16:21:24,811 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
16:21:24,912 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
16:21:35,317 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
16:21:35,345 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
16:21:35,375 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
16:21:35,380 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
16:21:35,385 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
16:21:35,413 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
16:21:35,418 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
16:21:35,423 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
16:21:35,473 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
16:21:35,477 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
16:21:35,482 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
16:21:35,518 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
16:21:35,523 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
16:21:35,527 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
16:21:35,532 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
16:21:35,549 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 9
16:21:35,644 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
16:21:35,649 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
16:21:35,654 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
16:21:35,659 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
16:21:35,664 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
16:21:35,675 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
16:21:35,675 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
16:21:35,707 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
16:21:35,741 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
16:21:35,745 graphrag.index.operations.embed_text.strategies.openai INFO embedding 10 inputs via 10 snippets using 1 batches. max_batch_size=16, max_tokens=8191
16:21:35,772 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
16:21:35,776 graphrag.index.operations.embed_text.strategies.openai INFO embedding 3 inputs via 3 snippets using 1 batches. max_batch_size=16, max_tokens=8191
16:21:35,824 graphrag.cli.index INFO All workflows completed successfully.
19:55:10,362 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
19:55:10,365 graphrag.cli.index INFO Starting pipeline run for: 20250221-195510, dry_run=False
19:55:10,366 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
19:55:10,367 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
19:55:10,367 graphrag.index.input.factory INFO loading input from root_dir=input
19:55:10,367 graphrag.index.input.factory INFO using file storage for input
19:55:10,369 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
19:55:10,369 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
19:55:10,375 graphrag.index.input.text INFO Found 1 files, loading 1
19:55:10,378 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
19:55:10,390 graphrag.utils.storage INFO reading table from storage: input.parquet
19:55:11,680 graphrag.utils.storage INFO reading table from storage: input.parquet
19:55:11,685 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
19:55:11,733 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
19:55:11,874 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
19:55:22,342 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
19:55:22,408 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
19:55:22,491 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
19:55:22,496 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
19:55:22,501 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
19:55:22,582 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
19:55:22,588 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
19:55:22,592 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
19:55:22,697 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
19:55:22,702 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
19:55:22,707 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
19:55:22,810 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
19:55:22,816 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
19:55:22,821 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
19:55:22,826 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
19:55:22,843 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 9
19:55:23,58 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
19:55:23,64 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
19:55:23,69 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
19:55:23,75 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
19:55:23,80 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
19:55:23,90 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
19:55:23,90 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
19:55:23,125 graphrag.index.operations.embed_text.strategies.openai INFO embedding 2 inputs via 2 snippets using 1 batches. max_batch_size=16, max_tokens=8191
19:55:23,183 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
19:55:23,187 graphrag.index.operations.embed_text.strategies.openai INFO embedding 9 inputs via 9 snippets using 1 batches. max_batch_size=16, max_tokens=8191
19:55:23,213 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
19:55:23,219 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
19:55:23,320 graphrag.cli.index INFO All workflows completed successfully.
19:55:28,546 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
19:55:28,551 graphrag.cli.index INFO Starting pipeline run for: 20250221-195528, dry_run=False
19:55:28,552 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
19:55:28,552 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
19:55:28,553 graphrag.index.input.factory INFO loading input from root_dir=input
19:55:28,553 graphrag.index.input.factory INFO using file storage for input
19:55:28,555 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
19:55:28,555 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
19:55:28,557 graphrag.index.input.text INFO Found 1 files, loading 1
19:55:28,560 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
19:55:28,575 graphrag.utils.storage INFO reading table from storage: input.parquet
19:55:29,835 graphrag.utils.storage INFO reading table from storage: input.parquet
19:55:29,839 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
19:55:29,888 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
19:55:30,42 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
19:55:40,555 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
19:55:40,629 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
19:55:40,715 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
19:55:40,721 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
19:55:40,726 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
19:55:40,805 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
19:55:40,811 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
19:55:40,816 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
19:55:40,941 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
19:55:40,946 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
19:55:40,950 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
19:55:41,60 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
19:55:41,65 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
19:55:41,70 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
19:55:41,74 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
19:55:41,110 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 9
19:55:41,311 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
19:55:41,319 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
19:55:41,325 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
19:55:41,331 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
19:55:41,335 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
19:55:41,344 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
19:55:41,345 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
19:55:41,382 graphrag.index.operations.embed_text.strategies.openai INFO embedding 3 inputs via 3 snippets using 1 batches. max_batch_size=16, max_tokens=8191
19:55:41,434 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
19:55:41,438 graphrag.index.operations.embed_text.strategies.openai INFO embedding 16 inputs via 16 snippets using 1 batches. max_batch_size=16, max_tokens=8191
19:55:41,471 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
19:55:41,474 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
19:55:41,596 graphrag.cli.index INFO All workflows completed successfully.
19:56:07,680 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
19:56:07,684 graphrag.cli.index INFO Starting pipeline run for: 20250221-195607, dry_run=False
19:56:07,685 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
19:56:07,685 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
19:56:07,686 graphrag.index.input.factory INFO loading input from root_dir=input
19:56:07,686 graphrag.index.input.factory INFO using file storage for input
19:56:07,687 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
19:56:07,688 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
19:56:07,690 graphrag.index.input.text INFO Found 1 files, loading 1
19:56:07,693 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
19:56:07,705 graphrag.utils.storage INFO reading table from storage: input.parquet
19:56:08,952 graphrag.utils.storage INFO reading table from storage: input.parquet
19:56:08,957 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
19:56:09,4 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
19:56:09,158 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
19:56:19,792 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
19:56:19,854 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
19:56:19,933 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
19:56:19,938 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
19:56:19,943 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
19:56:20,21 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
19:56:20,26 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
19:56:20,31 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
19:56:20,137 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
19:56:20,142 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
19:56:20,146 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
19:56:20,243 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
19:56:20,249 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
19:56:20,254 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
19:56:20,258 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
19:56:20,274 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 9
19:56:20,479 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
19:56:20,484 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
19:56:20,489 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
19:56:20,494 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
19:56:20,498 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
19:56:20,507 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
19:56:20,507 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
19:56:20,543 graphrag.index.operations.embed_text.strategies.openai INFO embedding 2 inputs via 2 snippets using 1 batches. max_batch_size=16, max_tokens=8191
19:56:20,570 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
19:56:20,573 graphrag.index.operations.embed_text.strategies.openai INFO embedding 9 inputs via 9 snippets using 1 batches. max_batch_size=16, max_tokens=8191
19:56:20,625 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
19:56:20,633 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
19:56:20,731 graphrag.cli.index INFO All workflows completed successfully.
19:56:25,981 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
19:56:25,985 graphrag.cli.index INFO Starting pipeline run for: 20250221-195625, dry_run=False
19:56:25,986 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
19:56:25,987 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
19:56:25,987 graphrag.index.input.factory INFO loading input from root_dir=input
19:56:25,987 graphrag.index.input.factory INFO using file storage for input
19:56:25,989 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
19:56:25,989 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
19:56:25,991 graphrag.index.input.text INFO Found 1 files, loading 1
19:56:25,994 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
19:56:26,6 graphrag.utils.storage INFO reading table from storage: input.parquet
19:56:27,294 graphrag.utils.storage INFO reading table from storage: input.parquet
19:56:27,299 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
19:56:27,347 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
19:56:27,487 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
19:56:38,363 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
19:56:38,428 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
19:56:38,506 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
19:56:38,511 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
19:56:38,516 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
19:56:38,599 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
19:56:38,604 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
19:56:38,609 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
19:56:38,731 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
19:56:38,737 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
19:56:38,741 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
19:56:38,846 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
19:56:38,851 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
19:56:38,856 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
19:56:38,861 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
19:56:38,895 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 9
19:56:39,94 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
19:56:39,99 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
19:56:39,105 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
19:56:39,110 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
19:56:39,115 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
19:56:39,125 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
19:56:39,126 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
19:56:39,159 graphrag.index.operations.embed_text.strategies.openai INFO embedding 3 inputs via 3 snippets using 1 batches. max_batch_size=16, max_tokens=8191
19:56:39,187 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
19:56:39,193 graphrag.index.operations.embed_text.strategies.openai INFO embedding 16 inputs via 16 snippets using 1 batches. max_batch_size=16, max_tokens=8191
19:56:39,255 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
19:56:39,259 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
19:56:39,358 graphrag.cli.index INFO All workflows completed successfully.
20:12:56,844 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
20:12:56,848 graphrag.cli.index INFO Starting pipeline run for: 20250221-201256, dry_run=False
20:12:56,848 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
20:12:56,849 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
20:12:56,850 graphrag.index.input.factory INFO loading input from root_dir=input
20:12:56,850 graphrag.index.input.factory INFO using file storage for input
20:12:56,851 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
20:12:56,852 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
20:12:56,853 graphrag.index.input.text INFO Found 1 files, loading 1
20:12:56,857 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
20:12:56,869 graphrag.utils.storage INFO reading table from storage: input.parquet
20:12:58,170 graphrag.utils.storage INFO reading table from storage: input.parquet
20:12:58,175 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
20:12:58,222 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
20:12:58,361 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:13:08,995 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
20:13:09,61 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:13:09,153 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
20:13:09,158 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:13:09,163 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
20:13:09,259 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
20:13:09,264 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:13:09,269 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
20:13:09,378 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
20:13:09,383 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
20:13:09,388 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
20:13:09,489 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
20:13:09,494 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
20:13:09,499 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
20:13:09,504 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
20:13:09,520 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 9
20:13:09,706 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
20:13:09,711 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
20:13:09,716 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
20:13:09,720 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
20:13:09,725 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
20:13:09,735 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
20:13:09,735 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
20:13:09,799 graphrag.index.operations.embed_text.strategies.openai INFO embedding 9 inputs via 9 snippets using 1 batches. max_batch_size=16, max_tokens=8191
20:13:09,865 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
20:13:09,869 graphrag.index.operations.embed_text.strategies.openai INFO embedding 2 inputs via 2 snippets using 1 batches. max_batch_size=16, max_tokens=8191
20:13:09,884 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
20:13:09,887 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
20:13:09,983 graphrag.cli.index INFO All workflows completed successfully.
20:13:17,164 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
20:13:17,168 graphrag.cli.index INFO Starting pipeline run for: 20250221-201317, dry_run=False
20:13:17,169 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
20:13:17,169 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
20:13:17,170 graphrag.index.input.factory INFO loading input from root_dir=input
20:13:17,170 graphrag.index.input.factory INFO using file storage for input
20:13:17,171 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
20:13:17,172 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
20:13:17,173 graphrag.index.input.text INFO Found 1 files, loading 1
20:13:17,177 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
20:13:17,189 graphrag.utils.storage INFO reading table from storage: input.parquet
20:13:18,486 graphrag.utils.storage INFO reading table from storage: input.parquet
20:13:18,491 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
20:13:18,539 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
20:13:18,681 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:13:29,116 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
20:13:29,185 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:13:29,268 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
20:13:29,273 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:13:29,278 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
20:13:29,358 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
20:13:29,363 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:13:29,368 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
20:13:29,477 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
20:13:29,483 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
20:13:29,488 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
20:13:29,601 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
20:13:29,608 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
20:13:29,613 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
20:13:29,618 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
20:13:29,655 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 9
20:13:29,858 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
20:13:29,864 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
20:13:29,869 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
20:13:29,875 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
20:13:29,879 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
20:13:29,889 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
20:13:29,890 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
20:13:29,923 graphrag.index.operations.embed_text.strategies.openai INFO embedding 3 inputs via 3 snippets using 1 batches. max_batch_size=16, max_tokens=8191
20:13:29,986 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
20:13:29,990 graphrag.index.operations.embed_text.strategies.openai INFO embedding 16 inputs via 16 snippets using 1 batches. max_batch_size=16, max_tokens=8191
20:13:30,22 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
20:13:30,25 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
20:13:30,125 graphrag.cli.index INFO All workflows completed successfully.
20:21:28,72 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
20:21:28,75 graphrag.cli.index INFO Starting pipeline run for: 20250221-202128, dry_run=False
20:21:28,76 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
20:21:28,77 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
20:21:28,78 graphrag.index.input.factory INFO loading input from root_dir=input
20:21:28,78 graphrag.index.input.factory INFO using file storage for input
20:21:28,79 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
20:21:28,80 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
20:21:28,81 graphrag.index.input.text INFO Found 1 files, loading 1
20:21:28,88 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
20:21:28,100 graphrag.utils.storage INFO reading table from storage: input.parquet
20:21:29,370 graphrag.utils.storage INFO reading table from storage: input.parquet
20:21:29,374 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
20:21:29,422 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
20:21:29,560 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:21:40,9 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
20:21:40,70 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:21:40,150 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
20:21:40,156 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:21:40,161 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
20:21:40,241 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
20:21:40,247 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:21:40,252 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
20:21:40,356 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
20:21:40,362 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
20:21:40,368 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
20:21:40,470 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
20:21:40,476 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
20:21:40,481 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
20:21:40,486 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
20:21:40,523 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 9
20:21:40,718 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
20:21:40,724 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
20:21:40,729 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
20:21:40,734 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
20:21:40,739 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
20:21:40,749 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
20:21:40,749 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
20:21:40,780 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
20:21:40,809 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
20:21:40,814 graphrag.index.operations.embed_text.strategies.openai INFO embedding 2 inputs via 2 snippets using 1 batches. max_batch_size=16, max_tokens=8191
20:21:40,857 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
20:21:40,861 graphrag.index.operations.embed_text.strategies.openai INFO embedding 9 inputs via 9 snippets using 1 batches. max_batch_size=16, max_tokens=8191
20:21:40,980 graphrag.cli.index INFO All workflows completed successfully.
20:21:46,93 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
20:21:46,97 graphrag.cli.index INFO Starting pipeline run for: 20250221-202146, dry_run=False
20:21:46,98 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
20:21:46,99 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
20:21:46,99 graphrag.index.input.factory INFO loading input from root_dir=input
20:21:46,99 graphrag.index.input.factory INFO using file storage for input
20:21:46,101 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
20:21:46,101 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
20:21:46,103 graphrag.index.input.text INFO Found 1 files, loading 1
20:21:46,106 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
20:21:46,118 graphrag.utils.storage INFO reading table from storage: input.parquet
20:21:47,406 graphrag.utils.storage INFO reading table from storage: input.parquet
20:21:47,410 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
20:21:47,459 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
20:21:47,600 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:21:58,135 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
20:21:58,206 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:21:58,286 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
20:21:58,291 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:21:58,297 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
20:21:58,382 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
20:21:58,388 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:21:58,392 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
20:21:58,510 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
20:21:58,516 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
20:21:58,521 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
20:21:58,621 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
20:21:58,629 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
20:21:58,635 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
20:21:58,640 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
20:21:58,677 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 9
20:21:58,880 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
20:21:58,886 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
20:21:58,891 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
20:21:58,896 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
20:21:58,902 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
20:21:58,911 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
20:21:58,912 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
20:21:58,946 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
20:21:58,971 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
20:21:58,975 graphrag.index.operations.embed_text.strategies.openai INFO embedding 16 inputs via 16 snippets using 1 batches. max_batch_size=16, max_tokens=8191
20:21:59,34 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
20:21:59,38 graphrag.index.operations.embed_text.strategies.openai INFO embedding 3 inputs via 3 snippets using 1 batches. max_batch_size=16, max_tokens=8191
20:21:59,140 graphrag.cli.index INFO All workflows completed successfully.
20:22:54,854 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
20:22:54,857 graphrag.cli.index INFO Starting pipeline run for: 20250221-202254, dry_run=False
20:22:54,858 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
20:22:54,859 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
20:22:54,860 graphrag.index.input.factory INFO loading input from root_dir=input
20:22:54,860 graphrag.index.input.factory INFO using file storage for input
20:22:54,861 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
20:22:54,862 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
20:22:54,863 graphrag.index.input.text INFO Found 1 files, loading 1
20:22:54,866 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
20:22:54,879 graphrag.utils.storage INFO reading table from storage: input.parquet
20:22:56,178 graphrag.utils.storage INFO reading table from storage: input.parquet
20:22:56,183 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
20:22:56,230 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
20:22:56,373 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:23:06,952 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
20:23:07,18 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:23:07,98 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
20:23:07,104 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:23:07,109 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
20:23:07,185 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
20:23:07,194 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:23:07,199 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
20:23:07,317 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
20:23:07,322 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
20:23:07,327 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
20:23:07,429 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
20:23:07,435 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
20:23:07,440 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
20:23:07,444 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
20:23:07,460 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 9
20:23:07,649 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
20:23:07,654 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
20:23:07,660 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
20:23:07,665 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
20:23:07,670 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
20:23:07,680 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
20:23:07,680 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
20:23:07,713 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
20:23:07,742 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
20:23:07,746 graphrag.index.operations.embed_text.strategies.openai INFO embedding 9 inputs via 9 snippets using 1 batches. max_batch_size=16, max_tokens=8191
20:23:07,799 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
20:23:07,804 graphrag.index.operations.embed_text.strategies.openai INFO embedding 2 inputs via 2 snippets using 1 batches. max_batch_size=16, max_tokens=8191
20:23:07,908 graphrag.cli.index INFO All workflows completed successfully.
20:23:13,117 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
20:23:13,121 graphrag.cli.index INFO Starting pipeline run for: 20250221-202313, dry_run=False
20:23:13,122 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
20:23:13,122 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
20:23:13,123 graphrag.index.input.factory INFO loading input from root_dir=input
20:23:13,123 graphrag.index.input.factory INFO using file storage for input
20:23:13,124 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
20:23:13,125 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
20:23:13,126 graphrag.index.input.text INFO Found 1 files, loading 1
20:23:13,130 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
20:23:13,141 graphrag.utils.storage INFO reading table from storage: input.parquet
20:23:14,409 graphrag.utils.storage INFO reading table from storage: input.parquet
20:23:14,417 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
20:23:14,468 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
20:23:14,605 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:23:25,77 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
20:23:25,142 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:23:25,224 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
20:23:25,230 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:23:25,235 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
20:23:25,311 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
20:23:25,317 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:23:25,322 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
20:23:25,429 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
20:23:25,434 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
20:23:25,439 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
20:23:25,555 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
20:23:25,560 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
20:23:25,565 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
20:23:25,570 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
20:23:25,606 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 9
20:23:25,802 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
20:23:25,807 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
20:23:25,812 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
20:23:25,817 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
20:23:25,823 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
20:23:25,833 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
20:23:25,834 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
20:23:25,866 graphrag.index.operations.embed_text.strategies.openai INFO embedding 16 inputs via 16 snippets using 1 batches. max_batch_size=16, max_tokens=8191
20:23:25,941 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
20:23:25,947 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
20:23:25,960 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
20:23:25,964 graphrag.index.operations.embed_text.strategies.openai INFO embedding 3 inputs via 3 snippets using 1 batches. max_batch_size=16, max_tokens=8191
20:23:26,66 graphrag.cli.index INFO All workflows completed successfully.
20:26:52,164 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
20:26:52,168 graphrag.cli.index INFO Starting pipeline run for: 20250221-202652, dry_run=False
20:26:52,169 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
20:26:52,170 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
20:26:52,170 graphrag.index.input.factory INFO loading input from root_dir=input
20:26:52,170 graphrag.index.input.factory INFO using file storage for input
20:26:52,172 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
20:26:52,173 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
20:26:52,174 graphrag.index.input.text INFO Found 1 files, loading 1
20:26:52,177 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
20:26:52,190 graphrag.utils.storage INFO reading table from storage: input.parquet
20:26:53,456 graphrag.utils.storage INFO reading table from storage: input.parquet
20:26:53,461 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
20:26:53,513 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
20:26:53,650 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:27:04,95 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
20:27:04,157 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:27:04,240 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
20:27:04,246 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:27:04,250 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
20:27:04,328 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
20:27:04,333 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:27:04,337 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
20:27:04,446 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
20:27:04,451 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
20:27:04,455 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
20:27:04,570 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
20:27:04,575 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
20:27:04,580 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
20:27:04,584 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
20:27:04,601 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 9
20:27:04,797 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
20:27:04,802 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
20:27:04,807 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
20:27:04,812 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
20:27:04,816 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
20:27:04,826 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
20:27:04,826 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
20:27:04,859 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
20:27:04,895 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
20:27:04,899 graphrag.index.operations.embed_text.strategies.openai INFO embedding 9 inputs via 9 snippets using 1 batches. max_batch_size=16, max_tokens=8191
20:27:04,952 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
20:27:04,957 graphrag.index.operations.embed_text.strategies.openai INFO embedding 2 inputs via 2 snippets using 1 batches. max_batch_size=16, max_tokens=8191
20:27:05,58 graphrag.cli.index INFO All workflows completed successfully.
20:27:10,210 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
20:27:10,213 graphrag.cli.index INFO Starting pipeline run for: 20250221-202710, dry_run=False
20:27:10,214 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
20:27:10,215 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
20:27:10,215 graphrag.index.input.factory INFO loading input from root_dir=input
20:27:10,215 graphrag.index.input.factory INFO using file storage for input
20:27:10,217 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
20:27:10,217 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
20:27:10,219 graphrag.index.input.text INFO Found 1 files, loading 1
20:27:10,222 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
20:27:10,234 graphrag.utils.storage INFO reading table from storage: input.parquet
20:27:11,507 graphrag.utils.storage INFO reading table from storage: input.parquet
20:27:11,512 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
20:27:11,559 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
20:27:11,709 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:27:22,160 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
20:27:22,234 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:27:22,313 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
20:27:22,319 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:27:22,324 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
20:27:22,405 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
20:27:22,411 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
20:27:22,416 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
20:27:22,525 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
20:27:22,530 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
20:27:22,535 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
20:27:22,657 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
20:27:22,663 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
20:27:22,668 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
20:27:22,673 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
20:27:22,710 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 9
20:27:22,911 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
20:27:22,916 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
20:27:22,922 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
20:27:22,927 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
20:27:22,933 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
20:27:22,942 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
20:27:22,942 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
20:27:22,973 graphrag.index.operations.embed_text.strategies.openai INFO embedding 16 inputs via 16 snippets using 1 batches. max_batch_size=16, max_tokens=8191
20:27:23,52 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
20:27:23,55 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
20:27:23,70 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
20:27:23,75 graphrag.index.operations.embed_text.strategies.openai INFO embedding 3 inputs via 3 snippets using 1 batches. max_batch_size=16, max_tokens=8191
20:27:23,176 graphrag.cli.index INFO All workflows completed successfully.
14:36:15,873 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
14:36:15,877 graphrag.cli.index INFO Starting pipeline run for: 20250222-143615, dry_run=False
14:36:15,878 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
14:36:15,878 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
14:36:15,879 graphrag.index.input.factory INFO loading input from root_dir=input
14:36:15,879 graphrag.index.input.factory INFO using file storage for input
14:36:15,881 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
14:36:15,881 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
14:36:15,886 graphrag.index.input.text INFO Found 1 files, loading 1
14:36:15,890 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
14:36:15,902 graphrag.utils.storage INFO reading table from storage: input.parquet
14:36:17,186 graphrag.utils.storage INFO reading table from storage: input.parquet
14:36:17,191 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
14:36:17,238 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
14:36:17,374 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
14:36:27,885 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
14:36:27,945 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
14:36:28,27 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
14:36:28,32 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
14:36:28,37 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
14:36:28,112 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
14:36:28,117 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
14:36:28,122 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
14:36:28,243 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
14:36:28,252 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
14:36:28,256 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
14:36:28,354 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
14:36:28,359 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
14:36:28,365 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
14:36:28,370 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
14:36:28,385 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 9
14:36:28,579 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
14:36:28,584 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
14:36:28,589 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
14:36:28,594 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
14:36:28,598 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
14:36:28,608 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
14:36:28,608 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
14:36:28,637 graphrag.index.operations.embed_text.strategies.openai INFO embedding 2 inputs via 2 snippets using 1 batches. max_batch_size=16, max_tokens=8191
14:36:28,678 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
14:36:28,684 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
14:36:28,725 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
14:36:28,729 graphrag.index.operations.embed_text.strategies.openai INFO embedding 9 inputs via 9 snippets using 1 batches. max_batch_size=16, max_tokens=8191
14:36:28,837 graphrag.cli.index INFO All workflows completed successfully.
14:36:33,958 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
14:36:33,962 graphrag.cli.index INFO Starting pipeline run for: 20250222-143633, dry_run=False
14:36:33,963 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
14:36:33,964 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
14:36:33,964 graphrag.index.input.factory INFO loading input from root_dir=input
14:36:33,964 graphrag.index.input.factory INFO using file storage for input
14:36:33,966 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
14:36:33,966 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
14:36:33,968 graphrag.index.input.text INFO Found 1 files, loading 1
14:36:33,972 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
14:36:33,984 graphrag.utils.storage INFO reading table from storage: input.parquet
14:36:35,227 graphrag.utils.storage INFO reading table from storage: input.parquet
14:36:35,232 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
14:36:35,279 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
14:36:35,417 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
14:36:46,51 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
14:36:46,117 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
14:36:46,194 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
14:36:46,200 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
14:36:46,205 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
14:36:46,287 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
14:36:46,292 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
14:36:46,297 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
14:36:46,415 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
14:36:46,420 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
14:36:46,424 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
14:36:46,524 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
14:36:46,528 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
14:36:46,533 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
14:36:46,537 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
14:36:46,573 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 9
14:36:46,770 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
14:36:46,775 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
14:36:46,781 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
14:36:46,786 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
14:36:46,791 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
14:36:46,803 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
14:36:46,803 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
14:36:46,847 graphrag.index.operations.embed_text.strategies.openai INFO embedding 16 inputs via 16 snippets using 1 batches. max_batch_size=16, max_tokens=8191
14:36:46,923 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
14:36:46,927 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
14:36:46,942 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
14:36:46,946 graphrag.index.operations.embed_text.strategies.openai INFO embedding 3 inputs via 3 snippets using 1 batches. max_batch_size=16, max_tokens=8191
14:36:47,46 graphrag.cli.index INFO All workflows completed successfully.
14:38:10,356 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
14:38:10,360 graphrag.cli.index INFO Starting pipeline run for: 20250222-143810, dry_run=False
14:38:10,361 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
14:38:10,362 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
14:38:10,362 graphrag.index.input.factory INFO loading input from root_dir=input
14:38:10,362 graphrag.index.input.factory INFO using file storage for input
14:38:10,364 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
14:38:10,364 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
14:38:10,366 graphrag.index.input.text INFO Found 1 files, loading 1
14:38:10,369 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
14:38:10,381 graphrag.utils.storage INFO reading table from storage: input.parquet
14:38:11,662 graphrag.utils.storage INFO reading table from storage: input.parquet
14:38:11,667 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
14:38:11,718 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
14:38:11,858 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
14:38:22,753 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
14:38:22,821 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
14:38:22,902 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
14:38:22,907 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
14:38:22,912 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
14:38:22,991 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
14:38:22,996 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
14:38:23,0 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
14:38:23,108 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
14:38:23,113 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
14:38:23,118 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
14:38:23,238 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
14:38:23,243 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
14:38:23,248 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
14:38:23,255 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
14:38:23,271 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 9
14:38:23,463 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
14:38:23,469 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
14:38:23,473 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
14:38:23,478 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
14:38:23,483 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
14:38:23,495 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
14:38:23,495 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
14:38:23,528 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
14:38:23,555 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
14:38:23,559 graphrag.index.operations.embed_text.strategies.openai INFO embedding 9 inputs via 9 snippets using 1 batches. max_batch_size=16, max_tokens=8191
14:38:23,614 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
14:38:23,622 graphrag.index.operations.embed_text.strategies.openai INFO embedding 2 inputs via 2 snippets using 1 batches. max_batch_size=16, max_tokens=8191
14:38:23,717 graphrag.cli.index INFO All workflows completed successfully.
14:38:28,748 graphrag.cli.index INFO Logging enabled at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/indexing-engine.log
14:38:28,752 graphrag.cli.index INFO Starting pipeline run for: 20250222-143828, dry_run=False
14:38:28,752 graphrag.cli.index INFO Using default configuration: {
    "llm": {
        "api_key": "==== REDACTED ====",
        "type": "openai_chat",
        "encoding_model": "cl100k_base",
        "model": "gpt-3.5-turbo",
        "max_tokens": 4000,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0,
        "request_timeout": 180.0,
        "api_base": null,
        "api_version": null,
        "proxy": null,
        "audience": null,
        "deployment_name": null,
        "model_supports_json": true,
        "tokens_per_minute": 50000,
        "requests_per_minute": 1000,
        "max_retries": 10,
        "max_retry_wait": 10.0,
        "sleep_on_rate_limit_recommendation": true,
        "concurrent_requests": 25,
        "responses": null
    },
    "parallelization": {
        "stagger": 0.3,
        "num_threads": 50
    },
    "async_mode": "threaded",
    "root_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG",
    "reporting": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null
    },
    "storage": {
        "type": "file",
        "base_dir": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "update_index_storage": null,
    "cache": {
        "type": "file",
        "base_dir": "cache",
        "storage_account_blob_url": null,
        "cosmosdb_account_url": null
    },
    "input": {
        "type": "file",
        "file_type": "text",
        "base_dir": "input",
        "storage_account_blob_url": null,
        "encoding": "utf-8",
        "file_pattern": ".*\\.txt$",
        "file_filter": null,
        "source_column": null,
        "timestamp_column": null,
        "timestamp_format": null,
        "text_column": "text",
        "title_column": null,
        "document_attribute_columns": []
    },
    "embed_graph": {
        "enabled": false,
        "dimensions": 1536,
        "num_walks": 10,
        "walk_length": 40,
        "window_size": 2,
        "iterations": 3,
        "random_seed": 597832,
        "use_lcc": true
    },
    "embeddings": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_embedding",
            "encoding_model": "cl100k_base",
            "model": "text-embedding-3-small",
            "max_tokens": 4000,
            "temperature": 0,
            "top_p": 1,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": null,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "batch_size": 16,
        "batch_max_tokens": 8191,
        "target": "required",
        "skip": [],
        "vector_store": {
            "type": "lancedb",
            "db_uri": "/home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output/lancedb",
            "container_name": "==== REDACTED ====",
            "overwrite": true
        },
        "strategy": null
    },
    "chunks": {
        "size": 1200,
        "overlap": 100,
        "group_by_columns": [
            "id"
        ],
        "strategy": "tokens",
        "encoding_model": "cl100k_base"
    },
    "snapshots": {
        "embeddings": false,
        "graphml": false,
        "transient": false
    },
    "entity_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/entity_extraction.txt",
        "entity_types": [
            "movie",
            "genre",
            "director",
            "actor"
        ],
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "summarize_descriptions": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/summarize_descriptions.txt",
        "max_length": 500,
        "strategy": null
    },
    "community_reports": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "prompt": "prompts/community_report.txt",
        "max_length": 2000,
        "max_input_length": 8000,
        "strategy": null
    },
    "claim_extraction": {
        "llm": {
            "api_key": "==== REDACTED ====",
            "type": "openai_chat",
            "encoding_model": "cl100k_base",
            "model": "gpt-3.5-turbo",
            "max_tokens": 4000,
            "temperature": 0.0,
            "top_p": 1.0,
            "n": 1,
            "frequency_penalty": 0.0,
            "presence_penalty": 0.0,
            "request_timeout": 180.0,
            "api_base": null,
            "api_version": null,
            "proxy": null,
            "audience": null,
            "deployment_name": null,
            "model_supports_json": true,
            "tokens_per_minute": 50000,
            "requests_per_minute": 1000,
            "max_retries": 10,
            "max_retry_wait": 10.0,
            "sleep_on_rate_limit_recommendation": true,
            "concurrent_requests": 25,
            "responses": null
        },
        "parallelization": {
            "stagger": 0.3,
            "num_threads": 50
        },
        "async_mode": "threaded",
        "enabled": false,
        "prompt": "prompts/claim_extraction.txt",
        "description": "Any claims or facts that could be relevant to information discovery.",
        "max_gleanings": 1,
        "strategy": null,
        "encoding_model": "cl100k_base"
    },
    "cluster_graph": {
        "max_cluster_size": 10,
        "use_lcc": true,
        "seed": 3735928559
    },
    "umap": {
        "enabled": false
    },
    "local_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "community_prop": 0.15,
        "conversation_history_max_turns": 5,
        "top_k_entities": 10,
        "top_k_relationships": 10,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "global_search": {
        "map_prompt": null,
        "reduce_prompt": null,
        "knowledge_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "map_max_tokens": 1000,
        "reduce_max_tokens": 2000,
        "concurrency": 32,
        "dynamic_search_llm": "gpt-4o-mini",
        "dynamic_search_threshold": 1,
        "dynamic_search_keep_parent": false,
        "dynamic_search_num_repeats": 1,
        "dynamic_search_use_summary": false,
        "dynamic_search_concurrent_coroutines": 16,
        "dynamic_search_max_level": 2
    },
    "drift_search": {
        "prompt": null,
        "reduce_prompt": null,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 3,
        "max_tokens": 12000,
        "data_max_tokens": 12000,
        "reduce_max_tokens": 2000,
        "reduce_temperature": 0.0,
        "concurrency": 32,
        "drift_k_followups": 20,
        "primer_folds": 5,
        "primer_llm_max_tokens": 12000,
        "n_depth": 3,
        "local_search_text_unit_prop": 0.9,
        "local_search_community_prop": 0.1,
        "local_search_top_k_mapped_entities": 10,
        "local_search_top_k_relationships": 10,
        "local_search_max_data_tokens": 12000,
        "local_search_temperature": 0.0,
        "local_search_top_p": 1.0,
        "local_search_n": 1,
        "local_search_llm_max_gen_tokens": 2000
    },
    "basic_search": {
        "prompt": null,
        "text_unit_prop": 0.5,
        "conversation_history_max_turns": 5,
        "temperature": 0.0,
        "top_p": 1.0,
        "n": 1,
        "max_tokens": 12000,
        "llm_max_tokens": 2000
    },
    "encoding_model": "cl100k_base",
    "skip_workflows": []
}
14:38:28,753 graphrag.storage.file_pipeline_storage INFO Creating file storage at /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/output
14:38:28,754 graphrag.index.input.factory INFO loading input from root_dir=input
14:38:28,754 graphrag.index.input.factory INFO using file storage for input
14:38:28,755 graphrag.storage.file_pipeline_storage INFO search /home/Nema/UniCRS_GraphRAG/Recommendation_GraphRAG/input for files matching .*\.txt$
14:38:28,756 graphrag.index.input.text INFO found text files from input, found [('current_line.txt', {})]
14:38:28,757 graphrag.index.input.text INFO Found 1 files, loading 1
14:38:28,761 graphrag.index.run.run_workflows INFO Final # of rows loaded: 1
14:38:28,775 graphrag.utils.storage INFO reading table from storage: input.parquet
14:38:30,14 graphrag.utils.storage INFO reading table from storage: input.parquet
14:38:30,19 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
14:38:30,66 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
14:38:30,204 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
14:38:40,716 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
14:38:40,781 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
14:38:40,860 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
14:38:40,865 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
14:38:40,870 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
14:38:40,950 graphrag.utils.storage INFO reading table from storage: base_entity_nodes.parquet
14:38:40,955 graphrag.utils.storage INFO reading table from storage: base_relationship_edges.parquet
14:38:40,960 graphrag.utils.storage INFO reading table from storage: base_communities.parquet
14:38:41,63 graphrag.utils.storage INFO reading table from storage: create_base_text_units.parquet
14:38:41,68 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
14:38:41,72 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
14:38:41,174 graphrag.utils.storage INFO reading table from storage: create_final_nodes.parquet
14:38:41,180 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
14:38:41,185 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
14:38:41,189 graphrag.utils.storage INFO reading table from storage: create_final_communities.parquet
14:38:41,225 graphrag.index.operations.summarize_communities.prepare_community_reports INFO Number of nodes at level=0 => 9
14:38:41,443 graphrag.utils.storage INFO reading table from storage: create_final_documents.parquet
14:38:41,448 graphrag.utils.storage INFO reading table from storage: create_final_relationships.parquet
14:38:41,453 graphrag.utils.storage INFO reading table from storage: create_final_text_units.parquet
14:38:41,462 graphrag.utils.storage INFO reading table from storage: create_final_entities.parquet
14:38:41,467 graphrag.utils.storage INFO reading table from storage: create_final_community_reports.parquet
14:38:41,476 graphrag.index.flows.generate_text_embeddings INFO Creating embeddings
14:38:41,476 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding entity.description: default-entity-description
14:38:41,507 graphrag.index.operations.embed_text.strategies.openai INFO embedding 16 inputs via 16 snippets using 1 batches. max_batch_size=16, max_tokens=8191
14:38:41,583 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding text_unit.text: default-text_unit-text
14:38:41,587 graphrag.index.operations.embed_text.strategies.openai INFO embedding 1 inputs via 1 snippets using 1 batches. max_batch_size=16, max_tokens=8191
14:38:41,600 graphrag.index.operations.embed_text.embed_text INFO using vector store lancedb with container_name default for embedding community.full_content: default-community-full_content
14:38:41,604 graphrag.index.operations.embed_text.strategies.openai INFO embedding 3 inputs via 3 snippets using 1 batches. max_batch_size=16, max_tokens=8191
14:38:41,717 graphrag.cli.index INFO All workflows completed successfully.
